


-------------------------
●Tomcat

Webサーバ/Appサーバ
サーブレットエンジンを持っているので、サーブレットが動く。

%CATALINA_HOME%
→Tomcatインストールディレクトリのこと


%CATALINA_HOME%/webapps
→公開フォルダ。
  この下に置かれたファイルはブラウザ経由でアクセスできる。
  アプリケーションルート or コンテキストルート という。








-------------------------
●Gradle
オープンソースのビルドシステムです。
似たようなツールにMavenというものがある。（デファクトスタンダード）
Gradleは、Javaのjarファイルやwarファイルといったものを作ってくれます。
Groovyという言語によってビルドの手順を定義する。



-------------------------
●サーブレット

実体はJava言語で記述される通常のクラスで，リクエストがあるたびにサーバーで起動します。


-------------------------
●JSP (Java Server Pages)

HTMLにJava言語を埋め込んだような独自の書式を採用したファイルです。
実行前に自動的にサーブレットに変換されて動作するので，結局はクラスである。（だからサーブレットとやりとりできる）


<主な構文>
名前              構文         概要
-------------------------------------------------------------------
ディレクティブ    <%@.....%>   ページ単位の処理方法を指定
宣言部            <%!.....%>   変数や定数、ユーザ定義メソッドを宣言
                               ここで宣言された変数はコンテナ（Tomcat）が起動している間はずっと有効なので注意。（つまり初期化は1回だけ）
                               つまりカウンタみたいな変数をここで宣言すると意図しない挙動になる場合がある。
スクリプトレット  <%......%>   ページの処理方法を記述
                               Javaソースがそのまま書けるが、JSP本来の目的から言えばロジックはサーブレットに分離すべき。
式                <%=.....%>   指定された式を出力
アクションタグ    <jsp:.../>   定型的な処理をタグの形式で記述
                               jspは固定値ではなくタグ名なので注意。アクションタグはタグライブラリとして自分で作成できる。
                               他の構文と異なり、XMLに則って記載すること。
コメント          <%--..--%>   コメントを記述



<主なディレクティブ>
@page        ページの基本的な処理方法
@include     外部ファイルをインクルード
@taglib      ページ内で使用するタグライブラリを宣言
@attribute   タグファイルで使える属性を宣言 (タグファイルでのみ使用可)
@tag         タグファイルの基本情報を定義 (タグファイルでのみ使用可)
@variable    タグファイルで使える変数を宣言 (タグファイルでのみ使用可)


暗黙オブジェクト
→JSPに組み込まれているJavaのオブジェクトのこと。

<主な暗黙オブジェクト>
application  コンテナに関する情報や、ユーザ間で共有可能な情報を管理。
config       サーブレット初期化パラメータにアクセスする手段を提供
exception    ページ内で発生した例外情報を管理
out          クライアントにデータを出力する手段を提供
page         JSPページそのものを表す（使用する場面はないはず）
pageContext  ページ単位で利用可能な情報、また暗黙オブジェクトへのアクセス手段を提供（使用する場面はないはず）
request      クライアントから送信されたリクエスト情報にアクセスする手段を提供
response     クライアントへの応答を操作する手段を提供
session      セッション単位で保持可能な情報を管理




-------------------------
●Pleiades All in One Eclipseについて

Pleiadesは、Eclipse + よく使うプラグイン（日本語ランゲージパックも含む）をまとめたもので、
サクッとJava開発環境を作るにはベスト。（全部入りなので）
環境変数にJAVA_HOMEを追加したりしなくてもよい。

http://mergedoc.osdn.jp/
で公開されている。

-------------------------
●サーブレットで作成したWebサーバーの公開URLについて

http://localhost:8080/[Project名]/[URLパターン]

URLパターンは、サーブレットのクラス定義の直前に@WebServlet()の引数として定義されているServletSampleとなる。

例：
http://localhost:8080/WebSample/ServletSample
の場合、

プロジェクト名：WebSample

@WebServlet("/ServletSample")
public class ServletSample extends HttpServlet {
……
}


-------------------------
●VS CodeでJavaアプリ開発  (2021/8/9)

<ざっくり手順>  ※VS CodeとOpenJDKはインストール済の前提
1.VS Codeの拡張機能で、「Java Extension Pack」をインストールする。
2.設定で「java home」を検索し、jdkをインストールしたパスを設定ファイル（settings.json）に設定する。
  例："java.home": "C:\\Program Files\\java\\jdk-16.0.2",
3.VS Codeを再起動する。
4.コマンドパレットで「java」と入れると「java: Create java project」が出てくるので選択する。
5.No build toolsを選択する。
6.プロジェクトファイルを作成するフォルダパスを選択する。
7.プロジェクト名を入力する。
　⇒プロジェクトが作成される。


-------------------------
●OpenJDKのインストール  (2021/8/9)

<ざっくり手順>
1.OpenJDKをダウンロードする。(zip)
  http://jdk.java.net/
2.zipを解凍する。
3.以下のフォルダにコピーする。
  例：C:\Program Files\java\jdk-16.0.2
4.↑のパスを環境変数「JAVA_HOME」に登録する。
