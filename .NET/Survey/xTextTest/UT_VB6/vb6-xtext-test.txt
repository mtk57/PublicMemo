VERSION 5.00
Object = "{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.0#0"; "MSCOMCTL.OCX"
Begin VB.Form frmXTextTest 
   Caption         =   "xTextコントロールテスト (VB6版)"
   ClientHeight    =   7800
   ClientWidth     =   9600
   LinkTopic       =   "Form1"
   ScaleHeight     =   7800
   ScaleWidth      =   9600
   StartUpPosition =   2  'CenterScreen
   Begin VB.CommandButton cmdRunAllTests 
      Caption         =   "すべてのテストを実行"
      Height          =   495
      Left            =   7200
      TabIndex        =   4
      Top             =   7080
      Width           =   2175
   End
   Begin VB.CommandButton cmdClearResults 
      Caption         =   "結果をクリア"
      Height          =   495
      Left            =   5040
      TabIndex        =   3
      Top             =   7080
      Width           =   2055
   End
   Begin VB.TextBox txtTestArea 
      Height          =   495
      Left            =   240
      TabIndex        =   1
      Text            =   "テスト用テキストボックス"
      Top             =   7080
      Width           =   4695
   End
   Begin MSComctlLib.ListView lvwResults 
      Height          =   6375
      Left            =   240
      TabIndex        =   0
      Top             =   600
      Width           =   9135
      _ExtentX        =   16113
      _ExtentY        =   11245
      View            =   3
      LabelEdit       =   1
      LabelWrap       =   -1  'True
      HideSelection   =   0   'False
      FullRowSelect   =   -1  'True
      GridLines       =   -1  'True
      _Version        =   393217
      ForeColor       =   -2147483640
      BackColor       =   -2147483643
      BorderStyle     =   1
      Appearance      =   1
      NumItems        =   3
      BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
         Text            =   "テスト名"
         Object.Width           =   7056
      EndProperty
      BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
         SubItemIndex    =   1
         Text            =   "結果"
         Object.Width           =   2540
      EndProperty
      BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
         SubItemIndex    =   2
         Text            =   "詳細"
         Object.Width           =   6068
      EndProperty
   End
   Begin VB.Label lblTestResults 
      Caption         =   "テスト結果: 合計 0, 成功 0, 失敗 0"
      Height          =   255
      Left            =   240
      TabIndex        =   2
      Top             =   240
      Width           =   9135
   End
End
Attribute VB_Name = "frmXTextTest"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit

' テスト統計用の変数
Private m_totalTests As Integer
Private m_passedTests As Integer
Private m_failedTests As Integer

' xTextコントロールの参照
Private WithEvents m_xText As xText
Attribute m_xText.VB_VarHelpID = -1

' テスト用のクリップボード変数
Private m_originalClipboardText As String

'*******************************************************************************
' フォーム初期化
'*******************************************************************************
Private Sub Form_Load()
    ' リストビューの初期化
    InitializeListView
    
    ' xTextコントロールの作成とフォームへの追加
    Set m_xText = Controls.Add("COMRADD.xText", "xTextTest", Me)
    With m_xText
        .Left = txtTestArea.Left
        .Top = txtTestArea.Top - txtTestArea.Height - 100
        .Width = txtTestArea.Width
        .Height = txtTestArea.Height
        .Visible = True
        .Text = ""
    End With
End Sub

'*******************************************************************************
' テスト実行
'*******************************************************************************

' すべてのテストを実行するボタンのクリックイベント
Private Sub cmdRunAllTests_Click()
    Screen.MousePointer = vbHourglass
    
    ' テスト統計をリセット
    ResetTestStats
    
    ' クリップボードの現在の内容を保存
    m_originalClipboardText = Clipboard.GetText
    
    ' すべてのテストを実行
    RunAllTests
    
    ' クリップボードの内容を復元
    Clipboard.SetText m_originalClipboardText
    
    ' 結果表示を更新
    UpdateResultsLabel
    
    Screen.MousePointer = vbDefault
End Sub

' 結果をクリアするボタンのクリックイベント
Private Sub cmdClearResults_Click()
    lvwResults.ListItems.Clear
    ResetTestStats
    UpdateResultsLabel
End Sub

' すべてのテストを順番に実行
Private Sub RunAllTests()
    ' プロパティテスト
    RunTest "MaxLengthB_DefaultValueIsZero", "MaxLengthBの初期値は0であるべき"
    RunTest "MaxLengthB_SetAndGetValue", "MaxLengthBに設定した値が取得できるべき"
    RunTest "MaxLengthB_NegativeValue_ThrowsError", "MaxLengthBに負の値を設定するとエラーになるべき"
    
    ' 基本機能テスト
    RunTest "Text_WithAsciiOnly_RespectsMaxLengthB", "制限を超える半角文字列は切り詰められるべき"
    RunTest "Text_WithJapaneseOnly_RespectsMaxLengthB", "制限を超える全角文字列は切り詰められるべき"
    RunTest "Text_WithMixedChars_RespectsMaxLengthB", "制限を超える混合文字列は切り詰められるべき"
    RunTest "MaxLength_And_MaxLengthB_SmallerValueApplied", "MaxLengthとMaxLengthBの小さい方が適用されるべき"
    
    ' クリップボード操作テスト
    RunTest "Paste_RespectsMaxLengthB", "ペースト時にMaxLengthBの制限が適用されるべき"
    RunTest "Paste_WithSelection_ReplacesSelectedText", "選択範囲がペーストしたテキストで置き換えられるべき"
    RunTest "Paste_WithSelection_ExceedingMaxLengthB_Truncates", "ペースト後のテキストはMaxLengthB以内であるべき"
    
    ' 特殊文字テスト
    RunTest "Text_WithSpecialJapaneseChars_RespectsMaxLengthB", "特殊記号を含む制限を超える文字列は切り詰められるべき"
End Sub

' 1つのテストを実行して結果を記録
Private Sub RunTest(testName As String, description As String)
    Dim result As Boolean
    Dim resultMessage As String
    Dim errorMessage As String
    
    m_totalTests = m_totalTests + 1
    
    ' テスト実行前にコントロールをリセット
    ResetXText
    
    ' エラーハンドリング
    On Error Resume Next
    
    ' テスト名に基づいてテストメソッドを呼び出し
    Select Case testName
        Case "MaxLengthB_DefaultValueIsZero"
            result = Test_MaxLengthB_DefaultValueIsZero
            
        Case "MaxLengthB_SetAndGetValue"
            result = Test_MaxLengthB_SetAndGetValue
            
        Case "MaxLengthB_NegativeValue_ThrowsError"
            result = Test_MaxLengthB_NegativeValue_ThrowsError
            
        Case "Text_WithAsciiOnly_RespectsMaxLengthB"
            result = Test_Text_WithAsciiOnly_RespectsMaxLengthB
            
        Case "Text_WithJapaneseOnly_RespectsMaxLengthB"
            result = Test_Text_WithJapaneseOnly_RespectsMaxLengthB
            
        Case "Text_WithMixedChars_RespectsMaxLengthB"
            result = Test_Text_WithMixedChars_RespectsMaxLengthB
            
        Case "MaxLength_And_MaxLengthB_SmallerValueApplied"
            result = Test_MaxLength_And_MaxLengthB_SmallerValueApplied
            
        Case "Paste_RespectsMaxLengthB"
            result = Test_Paste_RespectsMaxLengthB
            
        Case "Paste_WithSelection_ReplacesSelectedText"
            result = Test_Paste_WithSelection_ReplacesSelectedText
            
        Case "Paste_WithSelection_ExceedingMaxLengthB_Truncates"
            result = Test_Paste_WithSelection_ExceedingMaxLengthB_Truncates
            
        Case "Text_WithSpecialJapaneseChars_RespectsMaxLengthB"
            result = Test_Text_WithSpecialJapaneseChars_RespectsMaxLengthB
            
        Case Else
            result = False
            errorMessage = "未定義のテスト"
    End Select
    
    ' エラーが発生した場合
    If Err.Number <> 0 Then
        result = False
        errorMessage = "エラー #" & Err.Number & ": " & Err.Description
    End If
    
    On Error GoTo 0
    
    ' テスト結果を記録
    If result Then
        resultMessage = "成功"
        m_passedTests = m_passedTests + 1
    Else
        resultMessage = "失敗"
        m_failedTests = m_failedTests + 1
    End If
    
    ' リストビューに結果を追加
    AddTestResult testName, resultMessage, IIf(Len(errorMessage) > 0, errorMessage, description)
End Sub

'*******************************************************************************
' 個別テストメソッド
'*******************************************************************************

' MaxLengthBプロパティの初期値をテスト
Private Function Test_MaxLengthB_DefaultValueIsZero() As Boolean
    ' 新しいインスタンスを作成して確認
    Dim xTextNew As xText
    Set xTextNew = Controls.Add("COMRADD.xText", "xTextTemp", Me)
    
    Test_MaxLengthB_DefaultValueIsZero = (xTextNew.MaxLengthB = 0)
    
    ' 一時的に作成したコントロールを削除
    Controls.Remove "xTextTemp"
    Set xTextNew = Nothing
End Function

' MaxLengthBプロパティの設定と取得をテスト
Private Function Test_MaxLengthB_SetAndGetValue() As Boolean
    m_xText.MaxLengthB = 10
    Test_MaxLengthB_SetAndGetValue = (m_xText.MaxLengthB = 10)
End Function

' MaxLengthBに負の値を設定した場合、エラーが発生することをテスト
Private Function Test_MaxLengthB_NegativeValue_ThrowsError() As Boolean
    On Error Resume Next
    
    m_xText.MaxLengthB = -1
    
    ' エラーが発生した場合はテスト成功
    Test_MaxLengthB_NegativeValue_ThrowsError = (Err.Number <> 0)
    
    On Error GoTo 0
End Function

' 半角文字のみの入力でMaxLengthBの制限をテスト
Private Function Test_Text_WithAsciiOnly_RespectsMaxLengthB() As Boolean
    m_xText.MaxLengthB = 5
    
    ' 制限内の文字列を設定
    m_xText.Text = "abcde"
    
    ' 制限を超える文字列を設定
    m_xText.Text = "abcdef"
    
    ' 5文字に切り詰められたかを確認
    Test_Text_WithAsciiOnly_RespectsMaxLengthB = (m_xText.Text = "abcde")
End Function

' 全角文字のみの入力でMaxLengthBの制限をテスト
Private Function Test_Text_WithJapaneseOnly_RespectsMaxLengthB() As Boolean
    m_xText.MaxLengthB = 6 ' 全角3文字分
    
    ' 制限内の文字列を設定（全角3文字 = 6バイト）
    m_xText.Text = "あいう"
    
    ' 制限を超える文字列を設定（全角4文字 = 8バイト）
    m_xText.Text = "あいうえ"
    
    ' 3文字に切り詰められたかを確認
    Test_Text_WithJapaneseOnly_RespectsMaxLengthB = (m_xText.Text = "あいう")
End Function

' 半角と全角の混合文字列でMaxLengthBの制限をテスト
Private Function Test_Text_WithMixedChars_RespectsMaxLengthB() As Boolean
    m_xText.MaxLengthB = 7 ' 半角5文字 + 全角1文字分
    
    ' 制限内の文字列を設定（半角5文字 + 全角1文字 = 7バイト）
    m_xText.Text = "abcdeあ"
    
    ' 制限を超える文字列を設定
    m_xText.Text = "abcdeあい"
    
    ' 切り詰められたかを確認
    Test_Text_WithMixedChars_RespectsMaxLengthB = (m_xText.Text = "abcdeあ")
End Function

' MaxLengthとMaxLengthBの両方が設定されている場合に小さい方が適用されることをテスト
Private Function Test_MaxLength_And_MaxLengthB_SmallerValueApplied() As Boolean
    Dim test1 As Boolean
    Dim test2 As Boolean
    
    ' ケース1: MaxLength < MaxLengthB
    m_xText.MaxLength = 3
    m_xText.MaxLengthB = 10
    
    m_xText.Text = "abcdef"
    test1 = (m_xText.Text = "abc") ' MaxLengthに基づいて制限
    
    ' コントロールをリセット
    ResetXText
    
    ' ケース2: MaxLengthB < MaxLength（バイト数で換算）
    m_xText.MaxLength = 10
    m_xText.MaxLengthB = 4
    
    m_xText.Text = "abcdef"
    test2 = (m_xText.Text = "abcd") ' MaxLengthBに基づいて制限
    
    Test_MaxLength_And_MaxLengthB_SmallerValueApplied = test1 And test2
End Function

' ペースト操作をシミュレートしてMaxLengthBの制限をテスト
Private Function Test_Paste_RespectsMaxLengthB() As Boolean
    m_xText.MaxLengthB = 5
    m_xText.Text = ""
    
    ' クリップボードにテキストをセット
    On Error Resume Next
    Clipboard.SetText "abcdef"
    
    If Err.Number <> 0 Then
        ' クリップボード操作に失敗した場合はスキップ
        Test_Paste_RespectsMaxLengthB = True
        Exit Function
    End If
    On Error GoTo 0
    
    ' ペーストをシミュレート（コントロールにフォーカスを設定してSendKeys）
    m_xText.SetFocus
    m_xText.SelStart = 0
    SendKeys "^v", True  ' Ctrl+V
    
    ' 結果を検証（MaxLengthBに基づいて切り詰められるはず）
    Test_Paste_RespectsMaxLengthB = (m_xText.Text = "abcde")
End Function

' 選択範囲がある状態でのペースト操作をテスト
Private Function Test_Paste_WithSelection_ReplacesSelectedText() As Boolean
    m_xText.MaxLengthB = 10
    m_xText.Text = "abcdef"
    
    ' 選択範囲を設定（"cd"を選択）
    m_xText.SelStart = 2
    m_xText.SelLength = 2
    
    ' クリップボードにテキストをセット
    On Error Resume Next
    Clipboard.SetText "XYZ"
    
    If Err.Number <> 0 Then
        ' クリップボード操作に失敗した場合はスキップ
        Test_Paste_WithSelection_ReplacesSelectedText = True
        Exit Function
    End If
    On Error GoTo 0
    
    ' ペーストをシミュレート
    m_xText.SetFocus
    SendKeys "^v", True  ' Ctrl+V
    
    ' 結果を検証（選択範囲が置き換えられるはず）
    Test_Paste_WithSelection_ReplacesSelectedText = (m_xText.Text = "abXYZef")
End Function

' 選択範囲がある状態でのペーストで、MaxLengthBを超える場合のテスト
Private Function Test_Paste_WithSelection_ExceedingMaxLengthB_Truncates() As Boolean
    m_xText.MaxLengthB = 8
    m_xText.Text = "abcdef"
    
    ' 選択範囲を設定（"cd"を選択）
    m_xText.SelStart = 2
    m_xText.SelLength = 2
    
    ' クリップボードにテキストをセット（置き換え後に制限を超える）
    On Error Resume Next
    Clipboard.SetText "XYZABC"
    
    If Err.Number <> 0 Then
        ' クリップボード操作に失敗した場合はスキップ
        Test_Paste_WithSelection_ExceedingMaxLengthB_Truncates = True
        Exit Function
    End If
    On Error GoTo 0
    
    ' ペーストをシミュレート
    m_xText.SetFocus
    SendKeys "^v", True  ' Ctrl+V
    
    ' 結果を検証（制限内に収まるように切り詰められるはず）
    ' 実際の振る舞いは実装によって異なる可能性がある
    Test_Paste_WithSelection_ExceedingMaxLengthB_Truncates = (Len(m_xText.Text) * 2 <= 8)
End Function

' 特殊な全角文字（漢字、記号など）でのMaxLengthBの制限をテスト
Private Function Test_Text_WithSpecialJapaneseChars_RespectsMaxLengthB() As Boolean
    m_xText.MaxLengthB = 6 ' 全角3文字分
    
    ' 漢字を含む文字列
    m_xText.Text = "漢字あ"
    
    ' 特殊記号を含む文字列
    m_xText.Text = "①②③④"
    
    ' 3文字に切り詰められたかを確認
    Test_Text_WithSpecialJapaneseChars_RespectsMaxLengthB = (m_xText.Text = "①②③")
End Function

'*******************************************************************************
' ユーティリティ関数
'*******************************************************************************

' xTextコントロールをリセット
Private Sub ResetXText()
    m_xText.Text = ""
    m_xText.MaxLength = 32767 ' デフォルト値
    m_xText.MaxLengthB = 0    ' デフォルト値
    m_xText.SelStart = 0
    m_xText.SelLength = 0
End Sub

' リストビューの初期化
Private Sub InitializeListView()
    With lvwResults
        .View = lvwReport
        .FullRowSelect = True
        .GridLines = True
    End With
End Sub

' テスト結果をリストビューに追加
Private Sub AddTestResult(testName As String, result As String, description As String)
    Dim item As ListItem
    Set item = lvwResults.ListItems.Add(, , testName)
    
    item.SubItems(1) = result
    item.SubItems(2) = description
    
    ' 結果に応じた色設定
    If result = "成功" Then
        item.ForeColor = RGB(0, 128, 0) ' 緑
    Else
        item.ForeColor = RGB(255, 0, 0) ' 赤
    End If
    
    ' リストビューを一番下までスクロール
    lvwResults.ListItems(lvwResults.ListItems.Count).EnsureVisible
End Sub

' テスト統計をリセット
Private Sub ResetTestStats()
    m_totalTests = 0
    m_passedTests = 0
    m_failedTests = 0
End Sub

' 結果表示ラベルを更新
Private Sub UpdateResultsLabel()
    lblTestResults.Caption = "テスト結果: 合計 " & m_totalTests & ", 成功 " & m_passedTests & ", 失敗 " & m_failedTests
End Sub
