' API宣言
Private Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" ( _
    ByVal sAgent As String, _
    ByVal lAccessType As Long, _
    ByVal sProxyName As String, _
    ByVal sProxyBypass As String, _
    ByVal lFlags As Long) As Long

Private Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" ( _
    ByVal hInternetSession As Long, _
    ByVal sServerName As String, _
    ByVal nServerPort As Integer, _
    ByVal sUsername As String, _
    ByVal sPassword As String, _
    ByVal lService As Long, _
    ByVal lFlags As Long, _
    ByVal lContext As Long) As Long

Private Declare Function FtpSetCurrentDirectory Lib "wininet.dll" Alias "FtpSetCurrentDirectoryA" ( _
    ByVal hFtpSession As Long, _
    ByVal lpszDirectory As String) As Boolean

Private Declare Function FtpGetFile Lib "wininet.dll" Alias "FtpGetFileA" ( _
    ByVal hFtpSession As Long, _
    ByVal lpszRemoteFile As String, _
    ByVal lpszNewFile As String, _
    ByVal fFailIfExists As Boolean, _
    ByVal dwFlagsAndAttributes As Long, _
    ByVal dwFlags As Long, _
    ByVal dwContext As Long) As Boolean

Private Declare Function FtpPutFile Lib "wininet.dll" Alias "FtpPutFileA" ( _
    ByVal hFtpSession As Long, _
    ByVal lpszLocalFile As String, _
    ByVal lpszRemoteFile As String, _
    ByVal dwFlags As Long, _
    ByVal dwContext As Long) As Boolean

Private Declare Function InternetCloseHandle Lib "wininet.dll" ( _
    ByVal hInet As Long) As Boolean

' 定数定義
Private Const INTERNET_SERVICE_FTP = 1
Private Const INTERNET_OPEN_TYPE_DIRECT = 1
Private Const FTP_TRANSFER_TYPE_ASCII = &H1
Private Const FTP_TRANSFER_TYPE_BINARY = &H2

' 共通関数: FTP接続を確立する
Private Function ConnectFTP(ByVal Server As String, ByVal Username As String, ByVal Password As String) As Long
    Dim hOpen As Long
    Dim hConnect As Long
    
    hOpen = InternetOpen("VB6_FTP_Client", INTERNET_OPEN_TYPE_DIRECT, vbNullString, vbNullString, 0)
    If hOpen = 0 Then
        Err.Raise vbObjectError + 1, "ConnectFTP", "InternetOpen failed"
    End If
    
    hConnect = InternetConnect(hOpen, Server, 21, Username, Password, INTERNET_SERVICE_FTP, 0, 0)
    If hConnect = 0 Then
        InternetCloseHandle hOpen
        Err.Raise vbObjectError + 2, "ConnectFTP", "InternetConnect failed"
    End If
    
    ConnectFTP = hConnect
End Function

' パターン1: GET1の実装
Public Function FtpGet1(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                       ByVal RemotePath As String, ByVal RemoteFile As String, ByVal LocalFile As String) As Boolean
    Dim hConnect As Long
    
    On Error GoTo ErrorHandler
    
    hConnect = ConnectFTP(Server, Username, Password)
    
    ' リモートディレクトリに移動
    If Not FtpSetCurrentDirectory(hConnect, RemotePath) Then
        Err.Raise vbObjectError + 3, "FtpGet1", "Failed to change directory"
    End If
    
    ' ファイル取得
    If Not FtpGetFile(hConnect, RemoteFile, LocalFile, False, 0, FTP_TRANSFER_TYPE_BINARY, 0) Then
        Err.Raise vbObjectError + 4, "FtpGet1", "Failed to get file"
    End If
    
    FtpGet1 = True
    
CleanUp:
    If hConnect <> 0 Then InternetCloseHandle hConnect
    Exit Function
    
ErrorHandler:
    FtpGet1 = False
    Resume CleanUp
End Function

' パターン2: GET1aの実装
Public Function FtpGet1a(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                        ByVal RemotePath As String, ByVal RemoteFile As String, ByVal LocalFile As String) As Boolean
    ' パターン1と同じ処理を実行（pwdコマンドは結果を取得しないため省略）
    FtpGet1a = FtpGet1(Server, Username, Password, RemotePath, RemoteFile, LocalFile)
End Function

' パターン3: GET2の実装
Public Function FtpGet2(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                       ByVal RemotePath As String, ByVal RemoteFile1 As String, ByVal LocalFile1 As String, _
                       ByVal RemoteFile2 As String, ByVal LocalFile2 As String) As Boolean
    Dim hConnect As Long
    
    On Error GoTo ErrorHandler
    
    hConnect = ConnectFTP(Server, Username, Password)
    
    ' リモートディレクトリに移動
    If Not FtpSetCurrentDirectory(hConnect, RemotePath) Then
        Err.Raise vbObjectError + 3, "FtpGet2", "Failed to change directory"
    End If
    
    ' 1つ目のファイル取得
    If Not FtpGetFile(hConnect, RemoteFile1, LocalFile1, False, 0, FTP_TRANSFER_TYPE_BINARY, 0) Then
        Err.Raise vbObjectError + 4, "FtpGet2", "Failed to get first file"
    End If
    
    ' 2つ目のファイル取得
    If Not FtpGetFile(hConnect, RemoteFile2, LocalFile2, False, 0, FTP_TRANSFER_TYPE_BINARY, 0) Then
        Err.Raise vbObjectError + 5, "FtpGet2", "Failed to get second file"
    End If
    
    FtpGet2 = True
    
CleanUp:
    If hConnect <> 0 Then InternetCloseHandle hConnect
    Exit Function
    
ErrorHandler:
    FtpGet2 = False
    Resume CleanUp
End Function

' パターン4: GET7の実装
Public Function FtpGet7(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                       ByVal RemotePath As String, _
                       ByVal Files As Variant) As Boolean ' Filesは7つのRemoteFile,LocalFileのペアを含む配列
    Dim hConnect As Long
    Dim i As Integer
    
    On Error GoTo ErrorHandler
    
    hConnect = ConnectFTP(Server, Username, Password)
    
    ' リモートディレクトリに移動
    If Not FtpSetCurrentDirectory(hConnect, RemotePath) Then
        Err.Raise vbObjectError + 3, "FtpGet7", "Failed to change directory"
    End If
    
    ' 7つのファイルを順次取得
    For i = 0 To 6
        If Not FtpGetFile(hConnect, Files(i, 0), Files(i, 1), False, 0, FTP_TRANSFER_TYPE_BINARY, 0) Then
            Err.Raise vbObjectError + 4 + i, "FtpGet7", "Failed to get file " & (i + 1)
        End If
    Next i
    
    FtpGet7 = True
    
CleanUp:
    If hConnect <> 0 Then InternetCloseHandle hConnect
    Exit Function
    
ErrorHandler:
    FtpGet7 = False
    Resume CleanUp
End Function

' パターン5: PUT1の実装
Public Function FtpPut1(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                       ByVal RemotePath As String, ByVal LocalFile As String) As Boolean
    Dim hConnect As Long
    
    On Error GoTo ErrorHandler
    
    hConnect = ConnectFTP(Server, Username, Password)
    
    ' リモートディレクトリに移動
    If Not FtpSetCurrentDirectory(hConnect, RemotePath) Then
        Err.Raise vbObjectError + 3, "FtpPut1", "Failed to change directory"
    End If
    
    ' ファイルアップロード
    If Not FtpPutFile(hConnect, LocalFile, GetFileName(LocalFile), FTP_TRANSFER_TYPE_BINARY, 0) Then
        Err.Raise vbObjectError + 4, "FtpPut1", "Failed to put file"
    End If
    
    FtpPut1 = True
    
CleanUp:
    If hConnect <> 0 Then InternetCloseHandle hConnect
    Exit Function
    
ErrorHandler:
    FtpPut1 = False
    Resume CleanUp
End Function

' パターン6: PUT2の実装
Public Function FtpPut2(ByVal Server As String, ByVal Username As String, ByVal Password As String, _
                       ByVal RemotePath As String, ByVal LocalFile As String) As Boolean
    Dim hConnect As Long
    
    On Error GoTo ErrorHandler
    
    hConnect = ConnectFTP(Server, Username, Password)
    
    ' リモートディレクトリに移動
    If Not FtpSetCurrentDirectory(hConnect, RemotePath) Then
        Err.Raise vbObjectError + 3, "FtpPut2", "Failed to change directory"
    End If
    
    ' ファイルアップロード（ASCIIモード）
    If Not FtpPutFile(hConnect, LocalFile, GetFileName(LocalFile), FTP_TRANSFER_TYPE_ASCII, 0) Then
        Err.Raise vbObjectError + 4, "FtpPut2", "Failed to put file"
    End If
    
    FtpPut2 = True
    
CleanUp:
    If hConnect <> 0 Then InternetCloseHandle hConnect
    Exit Function
    
ErrorHandler:
    FtpPut2 = False
    Resume CleanUp
End Function

' ユーティリティ関数: ファイルパスからファイル名を取得
Private Function GetFileName(ByVal FilePath As String) As String
    Dim pos As Integer
    pos = InStrRev(FilePath, "\")
    If pos > 0 Then
        GetFileName = Mid(FilePath, pos + 1)
    Else
        GetFileName = FilePath
    End If
End Function
