VB memo

VB6, VBA, VB.NETのmemo

---------------------------------------
■

<VB6>
                                // [Ret]        [理由]
Len("あ")                       // 1            文字数
LenB("あ")                      // 2            SJIS変換後のバイト数

Asc("あ")                       // -32096       0x82A0 → "あ"のSJISコード
AscB("あ")                      // 66           0x42 → "あ"のUTF16コードである3042の下位コード
AscW("あ")                      // 12354        Unicodeのコードポイント

InStr("アイウエオ", "ウ")       // 3            "ウ"は3文字目
InStrB("アイウエオ", "ウ")      // 5            "ウ"はSJIS変換後のバイト数で5バイト目(1始まり)

Mid("アイウエオ", 3, 2)         // ウエ         3文字目から2文字を抜き出す
MidB("アイウエオ", 3, 2)        // イ           3バイト目から2バイトを抜き出す

Left("アイウエオ", 2)           // アイ         左から2文字を抜き出す
LeftB("アイウエオ", 2)          // ア           左から2バイトを抜き出す

Right("アイウエオ", 2)          // エオ         右から2文字を抜き出す
RightB("アイウエオ", 2)         // オ           右から2バイトを抜き出す

String(10, "A")                 // AAAAAAAAAA   

VB 6の文字列は内部的にはUnicode（UTF-16）で管理されており、
文字列の長さや位置は、Unicodeを基準に扱われている。
→なので以下コードのようにS-JISに変換してもイミディエイトウィンドウには表示できない。
StrConv("ABC", vbFromUnicode)

しかし、Asc関数やChr関数は例外的にS-JISを基準としており、
Unicodeで処理するにはWの付いた関数を使わねばならない。


<VB.NET>  ※B系はないのでコメントアウト

Len("あ")                                       // 1
'LenB("あ")                                     // 

Asc("あ")                                       // -32096
'AscB("あ")                                     // 
AscW("あ")                                      // 12354

InStr("アイウエオ", "ウ")                       // 3
'InStrB("アイウエオ", "ウ")                     // 

Mid("アイウエオ", 3, 2)                         // ウエ
'MidB("アイウエオ", 3, 2)                       // 

Microsoft.VisualBasic.Left("アイウエオ", 2)     // アイ
'LeftB("アイウエオ", 2)                         // 

Microsoft.VisualBasic.Right("アイウエオ", 2)    // エオ
'RightB("アイウエオ", 2)                        // 

New String("A", 10)                             // AAAAAAAAAA


---------------------------------------
■StrConv

文字列の文字種を変換する関数

引数には (文字列, 文字種) を指定します。

<文字種>
vbUpperCase   ：大文字に変換します。
vbLowerCase   ：小文字に変換します。
vbProperCase  ：各単語の先頭の文字を大文字に変換します。
vbWide        ：半角文字を全角文字に変換します。
vbNarrow      ：全角文字を半角文字に変換します。
vbKatakana    ：ひらがなをカタカナに変換します。
vbHiragana    ：カタカナをひらがなに変換します。
vbUnicode     ：システムの既定のコード ページを使って Unicode に変換します。
vbFromUnicode ：Unicode からシステムの既定のコード ページ (S-JIS) に変換します。

---------------------------------------
■文字コードを変換する
LenB("ABC")                 // 6  →半角も全角もUTF-16なので。
i = LenB("ＡＢＣ")          // 6  →半角も全角もUTF-16なので。

s = StrConv("ABC", vbFromUnicode)       // UTF-16 を Shift_JIS に変換
LenB(s)                                 // 3
s = StrConv("ＡＢＣ", vbFromUnicode)    // UTF-16 を Shift_JIS に変換
LenB(s)                                 // 6

s = StrConv("ABC", vbFromUnicode)       // UTF-16 を Shift_JIS に変換
s = StrConv(s, vbUnicode)               // Shift_JIS を UTF-16 に変換
LenB(s)                                 // 6

s = StrConv("ＡＢＣ", vbFromUnicode)    // UTF-16 を Shift_JIS に変換
s = StrConv(s, vbUnicode)               // Shift_JIS を UTF-16 に変換
LenB(s)                                 // 6

---------------------------------------
■VB6にあって、VB.NETにないもの。

・固定長文字列
	Ex.Dim s As String * 4

・Option Base

・末尾に記号($, %)が付く関数
	Ex.Left$()  →文字列を返すLeft関数のこと。$がないとVariantを返す。

---------------------------------------
■チェック観点（ビルドエラーで検知できない系）
・配列添え字の下限
・配列のサイズ変更
・配列の次元数の変更
・固定長文字列
・日付と時刻の相違
・日付時刻の書式化

---------------------------------------
■予約語

VB6											VB.NET
------------------------------------------------------------
Abs											ない
AddressOf									ある
And											ある
Any											ない
Array										ない
As											ある
Attribute									ない
Boolean										ある
ByRef										ある
Byte										ある
ByVal										ある
Call										ある
Case										ある
Cbool										ある
Cbyte										ある
Ccur										ない
Cdate										ある
CDbl										ある
Cdec										ある
Cdecl										ある
Cint										ある
Circle										ない
CLng										ある
CLngLng										ない
CLngPtr										ない
Close										ない
Const										ある
CSng										ある
CStr										ある
Currency									ない
CVar										ない
CVErr										ない
Date										ある
Debug										ない
Decimal										ある
Declare										ある
DefBool										ない
DefByte										ない
DefCur										ない
DefDate										ない
DefDbl										ない
DefDec										ない
DefInt										ない
DefLng										ない
DefLngLng									ない
DefLngPtr									ない
DefObj										ない
DefSng										ない
DefStr										ない
DefVar										ない
Dim											ある
Do											ある
DoEvents									ない
Double										ある
Each										
Else										ある
ElseIf										ある
empty										
End											ある
EndIf										ある
Enum										
Eqv											
Erase										
Event										
Exit										
false										ある
Fix											
For											ある
Friend										
Function									ある
Get											
Global										
GoSub										
GoTo										ある
If											ある
Imp											
Implements									
In											
Input										
InputB										
Int											
Integer										
Is											
Lbound										
Len											
LenB										
Let											
Like										
LINEINPUT									
Lock										
Long										
LongLong									
LongPtr										
Loop										ある
Lset										
Me											
Mod											
New											
Next										
Not											
nothing										
null										Nothing
On											
Open										
Option										ある
Optional									
Or											ある
ParamArray									
Preserve									
Print										
Private										
PSet										
Public										ある
Put											
RaiseEvent									
ReDim										ある
Rem											ある
Resume										
Return										ある
Rset										
Scale										
Seek										
Select										
Set											
Sgn											
Shared										
Single										
Spc											
Static										
Stop										
String										
Sub											
Tab											
Then										
To											
true										
Type										なし
TypeOf										
Ubound										
Unlock										
Until										
Variant										Object
VB_Base										なし
VB_Control									なし
VB_Creatable								なし
VB_Customizable								なし
VB_Description								なし
VB_Exposed									なし
VB_Ext_KEY									なし
VB_GlobalNameSpace							なし
VB_HelpID									なし
VB_Invoke_Func								なし
VB_Invoke_Property							なし
VB_Invoke_PropertyPut						なし
VB_Invoke_PropertyPutRefVB_MemberFlags		なし
VB_Name										なし
VB_PredeclaredId							なし
VB_ProcData									なし
VB_TemplateDerived							なし
VB_UserMemId								なし
VB_VarDescription							なし
VB_VarHelpID								なし
VB_VarMemberFlags							なし
VB_VarProcData								なし
VB_VarUserMemId								なし
Wend										
While										
With										
WithEvents									
Write										
Xor											

---------------------------------------
■簡易アプリ仕様

<開発環境・言語など>
・VisualStudio2019
・.NET Framework：4.8.1
・Windows フォームアプリケーション  (.NET Framework)
・Visual Basic

<機能仕様>
・テキストボックス1にフォルダパス、テキストボックス2に検索ワードを入力して
  ボタン1を押すと、フォルダパス配下のテキストファイル(*.txt)の中から、検索ワードを含む行を検索し、
  その行番号を、テキストボックス3に出力する。

<画面仕様>
・テキストボックス1
  ・イベントハンドラ：なし
・テキストボックス2
  ・イベントハンドラ：なし
・テキストボックス3
  ・イベントハンドラ：なし
  ・特記事項：複数行
・ボタン1
  ・イベントハンドラ：クリックイベントでメインロジックを実行する

<メインロジック仕様>
1.テキストボックス1,2の空チェック。どちらかが空ならエラー処理へ。両方とも空以外なら2へ。
2.フォルダの存在チェック。存在しなければエラー処理。存在すれば3へ。
3.フォルダ配下にある*.txtを検索して、ファイルパスをリストに格納する。リストの要素数が0個ならエラー処理へ。1個以上なら4へ。
4.リストの要素数ループ
5.1つ目の要素のファイルパスのファイルを開く
6.開いたファイルの1行目から、検索ワードを含むかチェックする。含まなければ次の行へ。含めば行番号リストに追加して次の行へ。
  →最終行まで繰り返す。
7.リストの全要素数分繰り返す。終われば8へ。
8.行番号リストの内容をテキストボックス3に出力する。
9.最後に正常終了とメッセージボックスで表示して終わり。


<エラー処理>
・メッセージボックスにエラー内容を表示してメインロジックを抜ける











